{"version":3,"sources":["src/wannacry/time.js"],"names":["CountDowner","till","setSeconds","getSeconds","callbacks","stop","second","toFixStr","bind","interval","start","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","map","s","join","timeDiff","Math","abs","getTime","Date","diffDays","floor","diffHours","diffMinutes","diffSeconds","e","setInterval","forEach","cb","clearInterval","str","push","Error"],"mappings":"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","file":"time.1f4692b2.map","sourceRoot":"..","sourcesContent":["class CountDowner {\n  constructor(till) {\n    till.setSeconds(till.getSeconds() + 1);\n    this.till = till;\n    this.callbacks = {\n      stop: [],\n      second: [],\n    };\n    this.toFixStr = this.toFixStr.bind(this);\n    this.interval = null;\n    this.start();\n  }\n  formatTill() {\n    const year = this.till.getFullYear();\n    const month = this.till.getMonth() + 1;\n    const date = this.till.getDate();\n    const hour = this.till.getHours();\n    const minute = this.till.getMinutes();\n    const second = this.till.getSeconds();\n    return (\n      [month, date, year].map(s => this.toFixStr(s)).join('/') +\n      ' ' +\n      [hour, minute, second].map(s => this.toFixStr(s)).join(':')\n    );\n  }\n  toFixStr(s) {\n    return (s < 10 ? '0' : '') + s;\n  }\n  formatLast() {\n    const timeDiff = Math.abs(this.till.getTime() - new Date().getTime());\n    const diffDays = Math.floor(timeDiff / (1000 * 3600 * 24));\n    const diffHours = Math.floor(timeDiff / (1000 * 3600));\n    const diffMinutes = Math.floor(timeDiff / (1000 * 60));\n    const diffSeconds = Math.floor(timeDiff / 1000);\n    return [\n      diffDays,\n      diffHours - diffDays * 24,\n      diffMinutes - diffHours * 60,\n      diffSeconds - diffMinutes * 60,\n    ]\n      .map(e => this.toFixStr(e))\n      .join(':');\n  }\n  start() {\n    this.interval = setInterval(() => {\n      if (new Date().getTime() - this.till.getTime() > 0) {\n        this.stop();\n      } else {\n        this.callbacks.second.forEach(cb => cb());\n      }\n    }, 1000);\n  }\n  stop() {\n    clearInterval(this.interval);\n    this.callbacks.stop.forEach(cb => cb());\n  }\n  on(str, cb) {\n    if (str in this.callbacks) {\n      this.callbacks[str].push(cb);\n    } else {\n      throw Error(`no ${str} type callback`);\n    }\n  }\n}\n\nexport default CountDowner;\n"]}