{"version":3,"sources":["src/win10-update/index.js"],"names":["render","update","startProgress","getProgress","progress","progressValue","sleep","Math","random","innerText","ms","Promise","res","setTimeout","findProgress","document","querySelector"],"mappings":";AAkCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAlCD,IAAA,EAAA,EAAA,QAAA,sBAkCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAjCD,QAAA,wBAEO,IAAMA,EAAS,WAEbC,OADPC,IACOD,EAAP,SAEaC,SAAAA,IA2Bd,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EA3BD,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACyBC,OADzB,EAAA,KAAA,EACyBA,IADzB,KAAA,EACQC,EADR,EAAA,KAEMC,EAAgB,EAFtB,KAAA,EAIUC,OAJV,EAAA,KAAA,EAIUA,EAAsB,IAAhBC,KAAKC,SAAkB,KAJvC,KAAA,EAKIJ,EAASK,UAAYJ,IALzB,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,UA2BC,MAAA,KAAA,WAlBD,SAASC,EAAMI,GACN,OAAA,IAAIC,QAAQ,SAAAC,GAAOC,OAAAA,WAAWD,EAAKF,KAG7BP,SAAAA,IAcd,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EAdD,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACMC,EAAW,KADjB,KAAA,EAEUA,GAAAA,EAFV,CAAA,EAAA,KAAA,EAAA,MAGqBU,OAHrB,EAAA,KAAA,EAGqBA,IAHrB,KAAA,EAGIV,EAHJ,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAKSA,OAAAA,EAAAA,OAAAA,SAAAA,GALT,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,UAcC,MAAA,KAAA,WAPD,SAASU,IACA,OAAA,IAAIH,QAAQ,SAAAC,GACjBC,WAAW,WACLT,IAAAA,EAAWW,SAASC,cAAc,aACtCJ,EAAIR,OAGT,QAAA,OAAA","file":"win10-update.805335b1.map","sourceRoot":"..","sourcesContent":["import update from './update-only.pug';\r\nimport '../win10/update.scss';\r\n\r\nexport const render = () => {\r\n  startProgress();\r\n  return update;\r\n};\r\nasync function startProgress() {\r\n  const progress = await getProgress();\r\n  let progressValue = 1;\r\n  while (true) {\r\n    await sleep(Math.random() * 5000 + 5000);\r\n    progress.innerText = progressValue++;\r\n  }\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nasync function getProgress() {\r\n  let progress = null;\r\n  while (!progress) {\r\n    progress = await findProgress();\r\n  }\r\n  return progress;\r\n}\r\nfunction findProgress() {\r\n  return new Promise(res => {\r\n    setTimeout(() => {\r\n      let progress = document.querySelector('#progress');\r\n      res(progress);\r\n    });\r\n  });\r\n}\r\n"]}