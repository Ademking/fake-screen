{"version":3,"sources":["src/wannacry/time.js","src/wannacry/index.js"],"names":["CountDowner","till","setSeconds","getSeconds","callbacks","stop","second","toFixStr","bind","interval","start","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","map","s","join","timeDiff","Math","abs","getTime","Date","diffDays","floor","diffHours","diffMinutes","e","setInterval","forEach","cb","clearInterval","str","Error","push","render","wannacry","setTimeout","pay","document","querySelector","lost","now","payDate","lostDate","payCountDowner","innerHTML","formatLast","formatTill","on","lostCountDowner"],"mappings":"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","file":"wannacry.a85fa35e.map","sourceRoot":"..","sourcesContent":["class CountDowner {\n  constructor(till) {\n    till.setSeconds(till.getSeconds() + 1);\n    this.till = till;\n    this.callbacks = {\n      stop: [],\n      second: [],\n    };\n    this.toFixStr = this.toFixStr.bind(this);\n    this.interval = null;\n    this.start();\n  }\n  formatTill() {\n    const year = this.till.getFullYear();\n    const month = this.till.getMonth() + 1;\n    const date = this.till.getDate();\n    const hour = this.till.getHours();\n    const minute = this.till.getMinutes();\n    const second = this.till.getSeconds();\n    return (\n      [month, date, year].map(s => this.toFixStr(s)).join('/') +\n      ' ' +\n      [hour, minute, second].map(s => this.toFixStr(s)).join(':')\n    );\n  }\n  toFixStr(s) {\n    return (s < 10 ? '0' : '') + s;\n  }\n  formatLast() {\n    const timeDiff = Math.abs(this.till.getTime() - new Date().getTime());\n    const diffDays = Math.floor(timeDiff / (1000 * 3600 * 24));\n    const diffHours = Math.floor(timeDiff / (1000 * 3600));\n    const diffMinutes = Math.floor(timeDiff / (1000 * 60));\n    const diffSeconds = Math.floor(timeDiff / 1000);\n    return [\n      diffDays,\n      diffHours - diffDays * 24,\n      diffMinutes - diffHours * 60,\n      diffSeconds - diffMinutes * 60,\n    ]\n      .map(e => this.toFixStr(e))\n      .join(':');\n  }\n  start() {\n    this.interval = setInterval(() => {\n      if (new Date().getTime() - this.till.getTime() > 0) {\n        this.stop();\n      } else {\n        this.callbacks.second.forEach(cb => cb());\n      }\n    }, 1000);\n  }\n  stop() {\n    clearInterval(this.interval);\n    this.callbacks.stop.forEach(cb => cb());\n  }\n  on(str, cb) {\n    if (str in this.callbacks) {\n      this.callbacks[str].push(cb);\n    } else {\n      throw Error(`no ${str} type callback`);\n    }\n  }\n}\n\nexport default CountDowner;\n","import 'babel-polyfill';\nimport CountDowner from './time.js';\nimport './wannacry.scss';\nimport wannacry from './wannacry.pug';\n\nexport const render = () => {\n  setTimeout(start);\n  return wannacry;\n};\n\nfunction start() {\n  const pay = document.querySelector('#pay');\n  const lost = document.querySelector('#lost');\n\n  const now = new Date();\n  const payDate = new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate() + 3,\n    now.getHours(),\n    now.getMinutes(),\n    now.getSeconds(),\n  );\n  const lostDate = new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate() + 7,\n    now.getHours(),\n    now.getMinutes(),\n    now.getSeconds(),\n  );\n  const payCountDowner = new CountDowner(payDate);\n  pay.innerHTML = payCountDowner.formatLast();\n  document.querySelector('#pay-on').innerHTML = payCountDowner.formatTill();\n  payCountDowner.on('second', () => {\n    pay.innerHTML = payCountDowner.formatLast();\n  });\n  const lostCountDowner = new CountDowner(lostDate);\n  lost.innerHTML = lostCountDowner.formatLast();\n  document.querySelector('#lost-on').innerHTML = lostCountDowner.formatTill();\n  lostCountDowner.on('second', () => {\n    lost.innerHTML = lostCountDowner.formatLast();\n  });\n}\n"]}