{"version":3,"sources":["src/win10/index.js"],"names":["crash","next","render","win10","setTimeout","start","setCrash","v","console","log","setNext","second","originHTML","document","querySelector","innerHTML","Math","floor","random","progress","progressValue","sleep","innerText","wrapper","blue","ms","Promise","res"],"mappings":";AAyCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAzCD,IAAA,EAAA,EAAA,QAAA,gBAyCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAxCD,QAAA,iBACA,QAAA,eAEO,IAIHA,EACAC,EALSC,EAAS,WAEbC,OADPC,WAAWC,GACJF,EAAP,SAKF,SAASG,EAASC,GAChBP,EAAQO,EACRC,QAAQC,IAAuCF,mCAAAA,OAAAA,EAA/C,MAEF,SAASG,EAAQC,GACfV,EAAOU,EACPH,QAAQC,IAA0BR,sBAAAA,OAAAA,EAAlC,kBAEaI,SAAAA,IAsBd,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EAtBD,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACMO,EAAaC,SAASC,cAAc,kBAAkBC,UAC1DT,EAASU,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAC1CR,EAAQ,KACFS,EAAWN,SAASC,cAAc,aACpCM,EAAgB,EALtB,KAAA,EAMSA,KAAAA,GAAiBpB,GAN1B,CAAA,EAAA,KAAA,GAAA,MAOUqB,OAPV,EAAA,KAAA,EAOUA,EAAsB,IAAhBL,KAAKE,SAAkBjB,GAPvC,KAAA,EAQIkB,EAASG,UAAYF,IARzB,EAAA,KAAA,EAAA,MAAA,KAAA,GAWMG,KADAA,EAAUV,SAASC,cAAc,mBAVvC,CAAA,EAAA,KAAA,GAAA,MAYuB,OAZvB,EAAA,KAAA,GAYuB,QAAO,iBAAP,CAAO,QAAA,QAAA,eAZ9B,KAAA,GAcUO,OAFAG,EAZV,EAAA,KAaID,EAAQR,UAAYS,EAbxB,EAAA,KAAA,GAcUH,EAAM,KAdhB,KAAA,GAeIE,EAAQR,UAAYH,EACpBP,IAhBJ,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,UAsBC,MAAA,KAAA,WAFD,SAASgB,EAAMI,GACN,OAAA,IAAIC,QAAQ,SAAAC,GAAOvB,OAAAA,WAAWuB,EAAKF,KAC3C,QAAA,OAAA","file":"win10.ed59a950.map","sourceRoot":"..","sourcesContent":["import win10 from './win10.pug';\r\nimport './update.scss';\r\nimport './blue.scss';\r\n\r\nexport const render = () => {\r\n  setTimeout(start)\r\n  return win10;\r\n};\r\nlet crash;\r\nlet next;\r\n\r\nfunction setCrash(v) {\r\n  crash = v;\r\n  console.log(`Blue screen when progress reach ${v}%`);\r\n}\r\nfunction setNext(second) {\r\n  next = second;\r\n  console.log(`Add progress every ${next} milliseconds`);\r\n}\r\nasync function start() {\r\n  let originHTML = document.querySelector('.win10-wrapper').innerHTML\r\n  setCrash(Math.floor(Math.random() * 40) + 61);\r\n  setNext(1000);\r\n  const progress = document.querySelector('#progress');\r\n  let progressValue = 1;\r\n  while (progressValue <= crash) {\r\n    await sleep(Math.random() * 1000 + next);\r\n    progress.innerText = progressValue++;\r\n  }\r\n  let wrapper = document.querySelector('.win10-wrapper')\r\n  if (wrapper) {\r\n    const blue = await import('./blue.pug');\r\n    wrapper.innerHTML = blue;\r\n    await sleep(10000)  \r\n    wrapper.innerHTML = originHTML\r\n    start()\r\n  }\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(res => setTimeout(res, ms));\r\n}\r\n"]}